//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct 
{
    BigEndian();
    local int startPos = FTell(); 
    uint FileSize;

    LittleEndian();

    int Version;
    uint Count;
    uint64 FirstPointer <hidden= true>;

    local int Pos;

    struct{
        uint64 PoseOffset <hidden = true>;
        Pos = FTell();
        FSeek(Pos - 8 + PoseOffset);
        string PoseString;
        FSeek(Pos);
        
        uint Index; //Pose index in the file
        uint PresetID;
        uint PoseNumber; //Pose index per character
        uint Cost;
        uint64 unk;

    }Pose[Count] <optimize= false, read = Str("%s (%d, %d)",PoseString,Index, PoseNumber)>;

    local int endPos = FTell();
    local int sectionSize = endPos - startPos;
    local int remainingSize = (FileSize + 4) - sectionSize ;

    struct
    {
        uchar Data;
    }
    StringEntriesSectior[remainingSize];
}CharaPoseParam <optimize = false>;